import { GenericID, RecursivePartial } from "../../common/common.types";
import TagoIOModule, { GenericModuleParams } from "../../common/TagoIOModule";
import { LoginResponse, NotificationCreateInfo, RunInfo, UserCreateInfo, UserInfo, UserQuery, LoginAsUserOptions } from "./run.types";
declare class Run extends TagoIOModule<GenericModuleParams> {
    info(): Promise<RunInfo>;
    edit(data: RecursivePartial<RunInfo>): Promise<string>;
    listUsers(query: UserQuery): Promise<Partial<UserInfo>[]>;
    userInfo(userID: GenericID): Promise<UserInfo>;
    userCreate(data: UserCreateInfo): Promise<string>;
    userEdit(userID: GenericID, data: Partial<UserInfo>): Promise<string>;
    userDelete(userID: GenericID): Promise<string>;
    loginAsUser(userID: GenericID, options?: LoginAsUserOptions): Promise<LoginResponse>;
    emailTest(data: {
        subject: string;
        body: string;
    }): Promise<string>;
    notificationList(userID: GenericID): Promise<NotificationCreateInfo[]>;
    notificationCreate(userID: GenericID, data: NotificationCreateInfo): Promise<{
        id: GenericID;
    }>;
    notificationEdit(notificationID: GenericID, data: Partial<NotificationCreateInfo>): Promise<string>;
    notificationDelete(notificationID: GenericID): Promise<string>;
}
export default Run;
//# sourceMappingURL=Run.d.ts.map