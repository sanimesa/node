"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const TagoIOModule_1 = __importDefault(require("../../common/TagoIOModule"));
class Run extends TagoIOModule_1.default {
    async info() {
        const result = await this.doRequest({
            path: "/run",
            method: "GET",
        });
        return result;
    }
    async edit(data) {
        const result = await this.doRequest({
            path: "/run",
            method: "PUT",
            body: data,
        });
        return result;
    }
    async listUsers(query) {
        const result = await this.doRequest({
            path: "/run/users",
            method: "GET",
            params: {
                page: (query === null || query === void 0 ? void 0 : query.page) || 1,
                fields: (query === null || query === void 0 ? void 0 : query.fields) || ["id", "name"],
                filter: (query === null || query === void 0 ? void 0 : query.filter) || {},
                amount: (query === null || query === void 0 ? void 0 : query.amount) || 20,
                orderBy: (query === null || query === void 0 ? void 0 : query.orderBy) ? `${query.orderBy[0]},${query.orderBy[1]}` : "name,asc",
            },
        });
        return result;
    }
    async userInfo(userID) {
        const result = await this.doRequest({
            path: `/run/users/${userID}`,
            method: "GET",
        });
        return result;
    }
    async userCreate(data) {
        const result = await this.doRequest({
            path: `/run/users`,
            method: "POST",
            body: data,
        });
        return result;
    }
    async userEdit(userID, data) {
        const result = await this.doRequest({
            path: `/run/users/${userID}`,
            method: "PUT",
            body: data,
        });
        return result;
    }
    async userDelete(userID) {
        const result = await this.doRequest({
            path: `/run/users/${userID}`,
            method: "DELETE",
        });
        return result;
    }
    async loginAsUser(userID, options) {
        const result = await this.doRequest({
            path: `/run/users/${userID}/login`,
            params: options,
            method: "GET",
        });
        return result;
    }
    async emailTest(data) {
        const result = await this.doRequest({
            path: `/run/email_test`,
            method: "POST",
            body: data,
        });
        return result;
    }
    async notificationList(userID) {
        const result = await this.doRequest({
            path: `/run/notification/${userID}`,
            method: "GET",
        });
        return result;
    }
    async notificationCreate(userID, data) {
        const result = await this.doRequest({
            path: `/run/notification/`,
            method: "POST",
            body: Object.assign({ run_user: userID }, data),
        });
        return result;
    }
    async notificationEdit(notificationID, data) {
        const result = await this.doRequest({
            path: `/run/notification/${notificationID}`,
            method: "PUT",
            body: data,
        });
        return result;
    }
    async notificationDelete(notificationID) {
        const result = await this.doRequest({
            path: `/run/notification/${notificationID}`,
            method: "DELETE",
        });
        return result;
    }
}
exports.default = Run;
//# sourceMappingURL=Run.js.map